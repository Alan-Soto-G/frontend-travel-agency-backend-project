<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/app/app-routing.module.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/app-routing.module.ts" />
              <option name="originalContent" value="import { NgModule } from '@angular/core';&#10;import { RouterModule, Routes } from '@angular/router';&#10;import { AdminComponent } from './components/layout/admin/admin.component';&#10;import { GuestComponent } from './components/layout/guest/guest.component';&#10;import { HttpClientModule } from '@angular/common/http';&#10;import { PermissionsComponent } from './pages/permissions/permissions.component';&#10;import { authGuard } from './guard/auth.guard';&#10;import { permissionGuard } from './guard/permission.guard';&#10;&#10;const routes: Routes = [&#10;  {&#10;    path: '',&#10;    component: AdminComponent,&#10;    canActivate: [authGuard], // Protege toda la sección admin&#10;    children: [&#10;      {&#10;        path: '',&#10;        redirectTo: '/default',&#10;        pathMatch: 'full'&#10;      },&#10;      {&#10;        path: 'default',&#10;        loadComponent: () =&gt; import('./pages/dashboard/default/default.component').then((c) =&gt; c.DefaultComponent),&#10;        canActivate: [permissionGuard],&#10;        data: {&#10;          apiUrl: '/api/dashboard', // Ajusta según tu endpoint&#10;          method: 'GET'&#10;        }&#10;      },&#10;      {&#10;        path: 'typography',&#10;        loadComponent: () =&gt; import('./demo/elements/typography/typography.component').then((c) =&gt; c.TypographyComponent)&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#10;      },&#10;      {&#10;        path: 'color',&#10;        loadComponent: () =&gt; import('./demo/elements/element-color/element-color.component').then((c) =&gt; c.ElementColorComponent)&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#10;      },&#10;      {&#10;        path: 'sample-page',&#10;        loadComponent: () =&gt; import('./demo/other/sample-page/sample-page.component').then((c) =&gt; c.SamplePageComponent)&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#10;      },&#10;      {&#10;        path: 'users',&#10;        loadComponent: () =&gt; import('./pages/users/users.component').then((m) =&gt; m.UsersComponent),&#10;        canActivate: [permissionGuard],&#10;        data: {&#10;          apiUrl: '/api/users',&#10;          method: 'GET'&#10;        }&#10;      },&#10;      {&#10;        path: 'roles',&#10;        loadComponent: () =&gt; import('./pages/roles/roles.component').then((m) =&gt; m.RolesComponent),&#10;        canActivate: [permissionGuard],&#10;        data: {&#10;          apiUrl: '/api/roles',&#10;          method: 'GET'&#10;        }&#10;      },&#10;      {&#10;        path: 'permissions',&#10;        component: PermissionsComponent,&#10;        canActivate: [permissionGuard],&#10;        data: {&#10;          apiUrl: '/api/permissions',&#10;          method: 'GET'&#10;        }&#10;      },&#10;      {&#10;        path: 'user-roles',&#10;        loadComponent: () =&gt; import('./pages/user-roles/user-roles.component').then((m) =&gt; m.UserRolesComponent),&#10;        canActivate: [permissionGuard],&#10;        data: {&#10;          apiUrl: '/api/user-role',&#10;          method: 'GET'&#10;        }&#10;      },&#10;      {&#10;        path: 'role-permissions',&#10;        loadComponent: () =&gt; import('./pages/role-permissions/role-permissions.component').then((m) =&gt; m.RolePermissionsComponent),&#10;        canActivate: [permissionGuard],&#10;        data: {&#10;          apiUrl: '/api/role-permission',&#10;          method: 'GET'&#10;        }&#10;      },&#10;      {&#10;        path: 'main',&#10;        loadComponent: () =&gt; import('./pages/main/main.component').then((c) =&gt; c.MainComponent)&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#10;      }&#10;    ]&#10;  },&#10;  {&#10;    path: '',&#10;    component: GuestComponent,&#10;    children: [&#10;      {&#10;        path: 'login',&#10;        loadComponent: () =&gt; import('./pages/authentication/login/login.component').then((c) =&gt; c.LoginComponent)&#10;      },&#10;      {&#10;        path: 'register',&#10;        loadComponent: () =&gt; import('./pages/authentication/register/register.component').then((c) =&gt; c.RegisterComponent)&#10;      }&#10;    ]&#10;  }&#10;];&#10;&#10;@NgModule({&#10;  imports: [RouterModule.forRoot(routes), HttpClientModule],&#10;  exports: [RouterModule]&#10;})&#10;export class AppRoutingModule {}&#10;" />
              <option name="updatedContent" value="import { NgModule } from '@angular/core';&#13;&#10;import { RouterModule, Routes } from '@angular/router';&#13;&#10;import { AdminComponent } from './components/layout/admin/admin.component';&#13;&#10;import { GuestComponent } from './components/layout/guest/guest.component';&#13;&#10;import { HttpClientModule } from '@angular/common/http';&#13;&#10;import { PermissionsComponent } from './pages/permissions/permissions.component';&#13;&#10;import { authGuard } from './guard/auth.guard';&#13;&#10;import { permissionGuard } from './guard/permission.guard';&#13;&#10;&#13;&#10;const routes: Routes = [&#13;&#10;  {&#13;&#10;    path: '',&#13;&#10;    component: AdminComponent,&#13;&#10;    canActivate: [authGuard], // Protege toda la sección admin&#13;&#10;    children: [&#13;&#10;      {&#13;&#10;        path: '',&#13;&#10;        redirectTo: '/default',&#13;&#10;        pathMatch: 'full'&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'default',&#13;&#10;        loadComponent: () =&gt; import('./pages/dashboard/default/default.component').then((c) =&gt; c.DefaultComponent),&#13;&#10;        canActivate: [permissionGuard],&#13;&#10;        data: {&#13;&#10;          apiUrl: '/api/dashboard', // Ajusta según tu endpoint&#13;&#10;          method: 'GET'&#13;&#10;        }&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'typography',&#13;&#10;        loadComponent: () =&gt; import('./demo/elements/typography/typography.component').then((c) =&gt; c.TypographyComponent)&#13;&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'color',&#13;&#10;        loadComponent: () =&gt; import('./demo/elements/element-color/element-color.component').then((c) =&gt; c.ElementColorComponent)&#13;&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'sample-page',&#13;&#10;        loadComponent: () =&gt; import('./demo/other/sample-page/sample-page.component').then((c) =&gt; c.SamplePageComponent)&#13;&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'users',&#13;&#10;        loadComponent: () =&gt; import('./pages/users/users.component').then((m) =&gt; m.UsersComponent),&#13;&#10;        canActivate: [permissionGuard],&#13;&#10;        data: {&#13;&#10;          apiUrl: '/api/users',&#13;&#10;          method: 'GET'&#13;&#10;        }&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'roles',&#13;&#10;        loadComponent: () =&gt; import('./pages/roles/roles.component').then((m) =&gt; m.RolesComponent),&#13;&#10;        canActivate: [permissionGuard],&#13;&#10;        data: {&#13;&#10;          apiUrl: '/api/roles',&#13;&#10;          method: 'GET'&#13;&#10;        }&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'permissions',&#13;&#10;        component: PermissionsComponent,&#13;&#10;        canActivate: [permissionGuard],&#13;&#10;        data: {&#13;&#10;          apiUrl: '/api/permissions',&#13;&#10;          method: 'GET'&#13;&#10;        }&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'user-roles',&#13;&#10;        loadComponent: () =&gt; import('./pages/user-roles/user-roles.component').then((m) =&gt; m.UserRolesComponent),&#13;&#10;        canActivate: [permissionGuard],&#13;&#10;        data: {&#13;&#10;          apiUrl: '/api/user-role',&#13;&#10;          method: 'GET'&#13;&#10;        }&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'role-permissions',&#13;&#10;        loadComponent: () =&gt; import('./pages/role-permissions/role-permissions.component').then((m) =&gt; m.RolePermissionsComponent),&#13;&#10;        canActivate: [permissionGuard],&#13;&#10;        data: {&#13;&#10;          apiUrl: '/api/role-permission',&#13;&#10;          method: 'GET'&#13;&#10;        }&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'main',&#13;&#10;        loadComponent: () =&gt; import('./pages/main/main.component').then((c) =&gt; c.MainComponent)&#13;&#10;        // Sin guard de permisos - acceso libre para usuarios autenticados&#13;&#10;      }&#13;&#10;    ]&#13;&#10;  },&#13;&#10;  {&#13;&#10;    path: '',&#13;&#10;    component: GuestComponent,&#13;&#10;    children: [&#13;&#10;      {&#13;&#10;        path: 'login',&#13;&#10;        loadComponent: () =&gt; import('./pages/authentication/login/login.component').then((c) =&gt; c.LoginComponent)&#13;&#10;      },&#13;&#10;      {&#13;&#10;        path: 'register',&#13;&#10;        loadComponent: () =&gt; import('./pages/authentication/register/register.component').then((c) =&gt; c.RegisterComponent)&#13;&#10;      }&#13;&#10;    ]&#13;&#10;  }&#13;&#10;];&#13;&#10;&#13;&#10;@NgModule({&#13;&#10;  imports: [RouterModule.forRoot(routes), HttpClientModule],&#13;&#10;  exports: [RouterModule]&#13;&#10;})&#13;&#10;export class AppRoutingModule {}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/components/layout/admin/navigation/nav-content/nav-content.component.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/components/layout/admin/navigation/nav-content/nav-content.component.html" />
              <option name="originalContent" value="&lt;!-- Vertical layout --&gt;&#10;&lt;ng-scrollbar style=&quot;height: calc(100vh - 70px)&quot; visibility=&quot;hover&quot;&gt;&#10;  &lt;div class=&quot;navbar-content&quot;&gt;&#10;    &lt;!-- Navegación filtrada por permisos --&gt;&#10;    @if (filteredNavigations$ | async; as filteredNavigations) {&#10;      &lt;ul class=&quot;nav coded-inner-navbar&quot; (click)=&quot;fireOutClick()&quot; (keydown.space)=&quot;fireOutClick()&quot; (keydown.enter)=&quot;fireOutClick()&quot;&gt;&#10;        @for (item of filteredNavigations; track item.id) {&#10;          @if (item.type === 'group') {&#10;            &lt;app-nav-group [item]=&quot;item&quot; /&gt;&#10;          } @else if (item.type === 'collapse') {&#10;            &lt;app-nav-collapse [item]=&quot;item&quot; /&gt;&#10;          } @else if (item.type === 'item') {&#10;            &lt;app-nav-item [item]=&quot;item&quot; /&gt;&#10;          }&#10;        }&#10;      &lt;/ul&gt;&#10;    } @else {&#10;      &lt;!-- Indicador de carga mientras se validan permisos --&gt;&#10;      &lt;div class=&quot;text-center p-4&quot;&gt;&#10;        &lt;div class=&quot;spinner-border text-primary&quot; role=&quot;status&quot;&gt;&#10;          &lt;span class=&quot;visually-hidden&quot;&gt;Validando permisos...&lt;/span&gt;&#10;        &lt;/div&gt;&#10;        &lt;p class=&quot;text-muted mt-2&quot;&gt;Cargando menú...&lt;/p&gt;&#10;      &lt;/div&gt;&#10;    }&#10;&#10;    &lt;div class=&quot;pc-navbar-card bg-primary rounded&quot;&gt;&#10;      &lt;h4 class=&quot;text-white&quot;&gt;Berry Pro&lt;/h4&gt;&#10;      &lt;p class=&quot;text-white&quot;&gt;Checkout Berry Premium Features&lt;/p&gt;&#10;      &lt;a&#10;        href=&quot;https://codedthemes.com/item/berry-angular-admin-dashboard-template/?utm_source=free_demo&amp;utm_medium=codedthemes&amp;utm_campaign=button_download_premium&quot;&#10;        target=&quot;_blank&quot;&#10;        class=&quot;btn btn-light text-primary&quot;&#10;      &gt;&#10;        Download Premium&#10;      &lt;/a&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;version&quot;&gt;&#10;      &lt;label for=&quot;version&quot; disabled class=&quot;pe-auto&quot;&gt;v{{ currentApplicationVersion }}&lt;/label&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/ng-scrollbar&gt;&#10;" />
              <option name="updatedContent" value="&lt;!-- Vertical layout --&gt;&#10;&lt;ng-scrollbar style=&quot;height: calc(100vh - 70px)&quot; visibility=&quot;hover&quot;&gt;&#10;  &lt;div class=&quot;navbar-content&quot;&gt;&#10;    &lt;!-- Navegación filtrada por permisos --&gt;&#10;    @if (filteredNavigations$ | async; as filteredNavigations) {&#10;      &lt;ul class=&quot;nav coded-inner-navbar&quot; (click)=&quot;fireOutClick()&quot; (keydown.space)=&quot;fireOutClick()&quot; (keydown.enter)=&quot;fireOutClick()&quot;&gt;&#10;        @for (item of filteredNavigations; track item.id) {&#10;          @if (item.type === 'group') {&#10;            &lt;app-nav-group [item]=&quot;item&quot; /&gt;&#10;          } @else if (item.type === 'collapse') {&#10;            &lt;app-nav-collapse [item]=&quot;item&quot; /&gt;&#10;          } @else if (item.type === 'item') {&#10;            &lt;app-nav-item [item]=&quot;item&quot; /&gt;&#10;          }&#10;        }&#10;      &lt;/ul&gt;&#10;    } @else {&#10;      &lt;!-- Indicador de carga mientras se validan permisos --&gt;&#10;      &lt;div class=&quot;text-center p-4&quot;&gt;&#10;        &lt;div class=&quot;spinner-border text-primary&quot; role=&quot;status&quot;&gt;&#10;          &lt;span class=&quot;visually-hidden&quot;&gt;Validando permisos...&lt;/span&gt;&#10;        &lt;/div&gt;&#10;        &lt;p class=&quot;text-muted mt-2&quot;&gt;Cargando menú...&lt;/p&gt;&#10;      &lt;/div&gt;&#10;    }&#10;&#10;    &lt;div class=&quot;pc-navbar-card bg-primary rounded&quot;&gt;&#10;      &lt;h4 class=&quot;text-white&quot;&gt;Berry Pro&lt;/h4&gt;&#10;      &lt;p class=&quot;text-white&quot;&gt;Checkout Berry Premium Features&lt;/p&gt;&#10;      &lt;a&#10;        href=&quot;https://codedthemes.com/item/berry-angular-admin-dashboard-template/?utm_source=free_demo&amp;utm_medium=codedthemes&amp;utm_campaign=button_download_premium&quot;&#10;        target=&quot;_blank&quot;&#10;        class=&quot;btn btn-light text-primary&quot;&#10;      &gt;&#10;        Download Premium&#10;      &lt;/a&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;version&quot;&gt;&#10;      &lt;label for=&quot;version&quot; disabled class=&quot;pe-auto&quot;&gt;v{{ currentApplicationVersion }}&lt;/label&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/ng-scrollbar&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/models/permission.model.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/models/permission.model.ts" />
              <option name="originalContent" value="export interface Permission{&#10;   _id: string;&#10;   url: String;&#10;   model: String;&#10;   method: String; // GET, POST, PUT, DELETE, etc.&#10;}&#10;" />
              <option name="updatedContent" value="export interface Permission{&#13;&#10;   _id: string;&#13;&#10;   url: String;&#13;&#10;   model: String;&#13;&#10;   method: String; // GET, POST, PUT, DELETE, etc.&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/config/db.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/config/db.js" />
              <option name="updatedContent" value="import mysql from 'mysql';&#10;&#10;const db = mysql.createConnection({&#10;    host: 'localhost',&#10;    user: 'root',&#10;    password: '',&#10;    database: 'agencia_viajes'&#10;});&#10;&#10;export default db;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>